name: CI

on:
  push:
    branches: [main]  # Run only when commits are pushed to main (e.g. after PR merge)
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  pull_request:
    branches: ["**"]  # Run on any PR, no matter the source or target branch

jobs:
  build:
    name: ${{ matrix.os }} - ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Define the operating systems to test (https://github.com/actions/runner-images)
        os: [windows-2022, ubuntu-24.04, macos-14]
        build_type: [debug, release]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0  # Fetch all history for accurate versioning

    - name: Install required system dependencies (Linux only)
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libxmu-dev libxi-dev libgl-dev libxrandr-dev libxinerama-dev libxcursor-dev

    - name: Setup compiler environment (Windows only)
      uses: ilammy/msvc-dev-cmd@v1

    - name: Cache vcpkg packages
      uses: actions/cache@v4
      with:
        path: |
          build/${{ matrix.build_type }}/vcpkg_installed
        key: vcpkg-${{ matrix.os }}-${{ matrix.build_type }}-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}
        restore-keys: |
          vcpkg-${{ matrix.os }}-${{ matrix.build_type }}-
          vcpkg-${{ matrix.os }}-
          vcpkg-
  
    - name: Configure
      run: cmake --preset ${{ matrix.build_type }}

    - name: Build
      run: cmake --build --preset ${{ matrix.build_type }}

    # Unit tests still failing using pixar USD.
    #- name: Test
    #  run: ctest --preset ${{ matrix.build_type }}

    - name: Upload vcpkg failure logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: vcpkg-build-logs
        path: externals/vcpkg/buildtrees