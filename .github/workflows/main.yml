name: main

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  workflow_dispatch:

jobs:

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
      # about runnershttps://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners
        include:
        - name: Linux_Clang_11_Python37
          os: ubuntu-22.04
          compiler: clang
          compiler_version: "11"
          build_config: 'release'

        - name: MacOS_Xcode_15_Python37
          os: macos-14
          compiler: xcode
          compiler_version: "15.4"
          build_config: 'release'

        - name: Windows_VS2022_x64_Python37
          os: windows-2022
          build_config: 'debug'

    steps:
    - name: Sync Repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install xorg-dev
        if [ "${{ matrix.compiler_version }}" != 'None' ]; then
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y g++-${{ matrix.compiler_version }}
            echo "CC=gcc-${{ matrix.compiler_version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.compiler_version }}" >> $GITHUB_ENV
          else
            sudo apt-get install -y clang-${{ matrix.compiler_version }}
            echo "CC=clang-${{ matrix.compiler_version }}" >> $GITHUB_ENV
            echo "CXX=clang++-${{ matrix.compiler_version }}" >> $GITHUB_ENV
          fi
        fi

    - name: Install Dependencies (MacOS)
      if: runner.os == 'macOS'
      run: |
        if [ "${{ matrix.compiler_version }}" != 'None' ]; then
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            brew install gcc@${{ matrix.compiler_version }}
            echo "CC=gcc-${{ matrix.compiler_version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.compiler_version }}" >> $GITHUB_ENV
          else
            ls -ls /Applications/
            sudo xcode-select -switch /Applications/Xcode_${{ matrix.compiler_version }}.app
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi
        fi

    - name: Cache CMake configuration
      uses: actions/cache@v4
      with:
        path: |
          build/${{ matrix.build_config }}/CMakeFiles
          build/${{ matrix.build_config }}/cmake_install.cmake
        key: ${{ runner.os }}-cmake-${{ matrix.build_config }}-${{ hashFiles('CMakeLists.txt', 'CMakePresets.json', 'cmake/*.cmake') }}
        restore-keys: |
          ${{ runner.os }}-cmake-${{ matrix.build_config }}-

    - name: Cache vcpkg packages
      uses: actions/cache@v4
      with:
        path: |
          build/${{ matrix.build_config }}/vcpkg_installed
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json', 'vcpkg-configuration.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-
          
    - name: CMake Generate
      run: cmake --preset ${{matrix.build_config}}

    - name: CMake Build
      run: cmake --build --preset ${{matrix.build_config}}

    - name: CMake Unit Tests
      run: ctest --preset ${{matrix.build_config}}

    
